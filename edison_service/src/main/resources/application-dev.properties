
#数据库相关
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/gpmybatis?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
#连接池 需要配置pom.xml
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
#配置druid相关参数
#初始化连接数、最小、最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.maxActive=30
#获取连接等待超时时间
spring.datasource.druid.maxWait=30000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#使用连接前先检查如果空闲时间>time-between-eviction-runs-millis,使用validationQuery检测连接是否有效。配置为true，切不影响性能，更安全
spring.datasource.druid.test-while-idle=true
#较影响性能，归还和使用前都进行检查是否连接有效
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connect-properties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis=5000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filter.commons-log.connection-logger-name=stat,wall,log4j
#spring.datasource.druid.filter.stat.log-slow-sql=true
#spring.datasource.druid.filter.stat.slow-sql-millis=2000
#stat功能（监控）、wall功能（sql防火墙）、log4j2功能（监控日志输出）
spring.datasource.druid.filters=wall

#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=false
spring.datasource.druid.web-stat-filter.url-pattern=/*
#排除一些不必要的url
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=false
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#禁用html上的reset-all
spring.datasource.druid.stat-view-servlet.reset-enable=false
#登录名
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123456


#redis相关
spring.redis.database=1
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.redis.timeout=30s
#额外参数
#是否定制化redis开关
custom.redis.ennable=false
#指定不同的redisTemplate使用redis的不同database，短横线-可加可不加
spring.redis.database-shared=0
spring.redis.database-data=1
spring.redis.databaseCached=2

#dubbo服务注册和发现
#【注意】：这些参数都是dubbo-spring-boot-starter的配置参数，如果是spring-boot-starter-dubbo的话，参数应该以spring.dubbo开头
dubbo.application.name=edison_service
#dubbo服务器地址-实际上就是zk的地址和端口
dubbo.registry.address=127.0.0.1:2181
#指明dubbo注册和发现的协议是zk
dubbo.registry.protocol=zookeeper
#dubbo.protocol.name=dubbo 默认的
#TODO 这里配置了127.0.0.1 否则注册到zk就是无线网卡或者有线网卡的地址，但是监听的却是127.0.0.1.。。
#dubbo.protocol.host=127.0.0.1
#默认20880
dubbo.protocol.port=20883
# dubbo注册和发现的端口 好像没用
#dubbo.provider
#dubbo.registry.port=10086
#zk2.7新版本提供的元数据中心
#dubbo.metadata-report.address=127.0.0.1:2181
dubbo.consumer.check=false
dubbo.consumer.timeout=60000
dubbo.consumer.retries=0
dubbo.provider.retries=0
#dubbo.scan.base-packages=a.b.x.c
#这个可以指定provider注册到zk上时供消费者访问的ip 正常来说除非dev测试，否则配置hostname对应的ip即可
dubbo.protocol.host=Edison-PC